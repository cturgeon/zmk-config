/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUMBER_L 1
#define NAV_L 2


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ { 

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <160>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc { 
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
            &hm ESC Q 	&kp W           &kp F       &kp P   	    &kp B                   &kp J           &kp L   	    &kp U           &kp Y           &hm SEMICOLON SQT
            &kp A	    &kp R           &kp S       &kp T           &kp G 		            &hm CLCK M      &kp N           &kp E           &kp I           &kp O
            &hm LSHIFT Z       &hm LCTRL X     &hm LALT C  &kp D   	&hm LWIN V              &hm LWIN K       &hm LSHIFT H   &hm LALT CMMA   &hm LCTRL DOT 	&hm ENTER QMARK
                                                &mo NAV_L      &kp SPC  				    &td0    &mo  NUMBER_L
            >;
		};

        numbers_layer {
            bindings = <
            &kp ESC     &kp BSLH       &kp LPAR        &kp RPAR       &kp EQUAL                           &kp GRAVE    &kp N7         &kp N8          &kp N9          &kp DEL
            &kp TAB     &kp LT          &kp LBKT       &kp RBKT       &kp GT                              &kp MINUS    &kp N4         &kp N5          &kp N6          &kp N0 
            &kp LSHIFT   &hm LCTRL LC(X)   &hm LALT LC(C)       &kp  SLASH     &hm LWIN  LC(V)                         &kp SLASH    &hm LSHIFT N1   &hm LALT N2    &hm LCTRL N3    &kp ENTER 
                                        &to NUMBER_L     &to DEFAULT  				                    &td0   &to NAV_L   
            >;
		};
		 
		nav_layer {
            bindings = <
            &kp LALT 	        &kp TAB             &kp R          &kp GRAVE                    &kp SLASH    			            &kp HOME    &kp PG_DN   &kp PG_UP    &kp END    &kp DEL 
            &kp LC(LA(LEFT))    &kp LC(LA(DOWN))    &kp LC(LA(RIGHT))   &kp LA(SEMICOLON)   &kp 2                           &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT           &kp SEMICOLON
            &kp  LC(Z)      &hm LCTRL LC(X)   &hm LALT LC(C)       &kp  LSHIFT     &hm LWIN  LC(V)                        &bt BT_CLR  &kp E       &kp E       &kp E               &kp ENTER
                                                                           &to NUMBER_L     &to DEFAULT  				 &td0    &to NAV_L  
            >;
		};  
	};
};